@model List<projCrud.Models.Center>

@{
    ViewData["Title"] = "Centers";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blood Bank Dashboard - Centres</title>
    <style>
        :root {
            --primary-color: #ff4b2b;
            --secondary-color: #ff416c;
            --accent-color: #232526;
            --text-color: #f8f9fa;
            --border-color: #393e46;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.45);
            --border-radius: 18px;
            --glass-bg: rgba(40, 40, 50, 0.55);
            --glass-blur: blur(10px);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            min-height: 100vh;
            background: linear-gradient(135deg, #232526 0%, #414345 100%);
        }

        /* Navigation */
        .navbar {
            background: rgba(30, 30, 40, 0.92);
            color: var(--text-color);
            padding: 1rem 0;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            box-shadow: var(--shadow);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid var(--border-color);
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-brand {
            font-size: 2rem;
            font-weight: bold;
            letter-spacing: 1.5px;
            color: var(--primary-color);
            text-shadow: 0 2px 8px rgba(0, 0, 0, 0.18);
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: var(--text-color);
            text-decoration: none;
            padding: 0.5rem 1.2rem;
            border-radius: var(--border-radius);
            transition: background 0.3s, transform 0.2s, color 0.2s;
            font-weight: 500;
            font-size: 1.1rem;
        }

        .nav-links a:hover,
        .nav-links a.active {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: #fff;
            transform: scale(1.08);
            box-shadow: 0 2px 8px rgba(255, 65, 108, 0.15);
        }

        .nav-toggle {
            display: none;
        }

        /* Main Content */
        .main-content {
            margin-top: 100px;
            padding: 2rem 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .hero-section {
            text-align: center;
            background: linear-gradient(135deg, rgba(255, 65, 108, 0.25), rgba(35, 37, 38, 0.95));
            color: var(--text-color);
            padding: 5rem 2rem 3rem 2rem;
            border-radius: var(--border-radius);
            margin-bottom: 3rem;
            box-shadow: var(--shadow);
            position: relative;
            overflow: hidden;
        }

        .hero-section:before {
            content: '';
            position: absolute;
            top: -60px;
            left: -60px;
            width: 200px;
            height: 200px;
            background: rgba(255, 65, 108, 0.10);
            border-radius: 50%;
            z-index: 0;
        }

        .hero-title {
            font-size: 3.5rem;
            margin-bottom: 1rem;
            font-weight: 400;
            letter-spacing: 2px;
            z-index: 1;
            position: relative;
            color: #fff;
            text-shadow: 0 4px 24px rgba(255, 65, 108, 0.15);
        }

        .hero-subtitle {
            font-size: 1.5rem;
            opacity: 0.92;
            z-index: 1;
            position: relative;
            color: #eee;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .stat-card {
            background: var(--glass-bg);
            backdrop-filter: var(--glass-blur);
            padding: 2.5rem 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            text-align: center;
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid var(--border-color);
        }

        .stat-card:hover {
            transform: translateY(-8px) scale(1.04);
            box-shadow: 0 12px 40px rgba(255, 65, 108, 0.18);
        }

        .stat-number {
            font-size: 3.2rem;
            font-weight: bold;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 8px rgba(255, 65, 108, 0.18);
        }

        .stat-label {
            font-size: 1.2rem;
            color: #ccc;
            opacity: 0.85;
        }

        .quick-actions {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 2rem;
        }

        .action-card {
            background: var(--glass-bg);
            backdrop-filter: var(--glass-blur);
            padding: 2.5rem 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            text-align: center;
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid var(--border-color);
        }

        .action-card:hover {
            transform: translateY(-8px) scale(1.04);
            box-shadow: 0 12px 40px rgba(255, 65, 108, 0.18);
        }

        .action-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.2rem;
            color: #fff;
            font-size: 2.5rem;
            box-shadow: 0 4px 16px rgba(255, 65, 108, 0.18);
        }

        .action-title {
            font-size: 1.6rem;
            margin-bottom: 1rem;
            color: #fff;
            font-weight: 500;
        }

        .btn {
            display: inline-block;
            padding: 0.85rem 2rem;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: #fff;
            text-decoration: none;
            border-radius: var(--border-radius);
            transition: background 0.3s, transform 0.2s;
            border: none;
            cursor: pointer;
            font-size: 1.1rem;
            font-weight: 500;
            box-shadow: 0 2px 8px rgba(255, 65, 108, 0.12);
        }

        .btn:hover {
            background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
            transform: scale(1.07);
            box-shadow: 0 6px 24px rgba(255, 65, 108, 0.18);
        }

        /* Add these styles to your <style> section */

        .card.table-card {
            background: var(--glass-bg);
            border-radius: var(--border-radius);
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.45), 0 2px 8px rgba(255, 65, 108, 0.10);
            backdrop-filter: var(--glass-blur);
            border: 1px solid var(--border-color);
            margin-bottom: 2.5rem;
            padding: 2rem 1.5rem;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .card.table-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 16px 48px 0 rgba(255, 65, 108, 0.18), 0 2px 8px rgba(255, 65, 108, 0.10);
        }

        .table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            color: var(--text-color);
            background: transparent;
        }

        .table th,
        .table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        .table th {
            background: rgba(35, 37, 38, 0.95);
            font-weight: 600;
            color: var(--primary-color);
            letter-spacing: 1px;
            border-bottom: 2px solid var(--primary-color);
        }

        .table tbody tr:nth-child(even) {
            background: rgba(255, 255, 255, 0.03);
        }

        .table tbody tr:hover {
            background: rgba(255, 65, 108, 0.07);
            transition: background 0.2s;
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-brand">Blood Bank Dashboard</div>

            <ul class="nav-links" id="navLinks">
                <li><a href="../Home">Home</a></li>
                <li><a href="../Center/">üè•Center</a></li>
                <li><a href="../Donor/">üë•Donors</a></li>
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="container">
            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">Blood Centres</h1>
                <a href="../Center/Create" class="btn btn-primary">+ Add Centre</a>
            </div>
            <br>
            <br>
            <div id="messageBox"></div>
            <!-- Desktop Table View -->
            <div class="card table-card">
                <div class="table-responsive">
                    <table class="table ">
                        <thead>
                            <tr>
                                <th>Center Name</th>
                                <th>Location</th>
                                <th>Total Donors</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var centre in Model)
                            {
                                <tr>
                                    <td>@centre.Name</td>
                                    <td>@centre.Location</td>
                                    <td>@(centre.Donors?.Count ?? 0)</td>
                                    <td>
                                        <a href="../Center/Edit?id=@centre.Id" class="btn btn-sm btn-success">Edit</a>
                                        <button class="btn btn-sm btn-danger"
                                            onclick="confirmDelete('@centre.Name',@centre.Id);">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </main>

    <script>
        async function confirmDelete(centreName, centerId) {
            if (confirm(`Are you sure you want to delete "${centreName}"?`)) {
                const res = await fetch(`/api/CenterApi/${centerId}`, {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" }
                });

                const messageBox = document.getElementById("messageBox");

                if (res.ok) {
                    const result = await res.json();
                    messageBox.innerHTML = `<div class="alert alert-success"> <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> ${result.message}</div>`;
                    setInterval(function () {
                        location.reload();
                    }, 5000);
                } else {
                    const errorText = await res.text();
                    messageBox.innerHTML = `<div class="alert alert-danger"> <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> ${errorText}</div>`;
                }
            }
        }

    </script>
</body>

</html>
