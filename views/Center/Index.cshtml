@model List<projCrud.Models.Center>

@{
    ViewData["Title"] = "Centers";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blood Bank Dashboard - Centres</title>
    <style>
        :root {
            --primary-color: #e74c3c;
            --secondary-color: #c0392b;
            --accent-color: #f8f9fa;
            --text-color: #2c3e50;
            --border-color: #dee2e6;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            --border-radius: 8px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: #f8f9fa;
        }

        /* Navigation */
        .navbar {
            background-color: var(--primary-color);
            color: white;
            padding: 1rem 0;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            box-shadow: var(--shadow);
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-brand {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            transition: background-color 0.3s ease;
        }

        .nav-links a:hover,
        .nav-links a.active {
            background-color: var(--secondary-color);
        }

        /* Main Content */
        .main-content {
            margin-top: 80px;
            padding: 2rem 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .alert {
            padding: 20px;
            color: white;
            border-radius: 5px;
        }

        .closebtn {
            margin-left: 15px;
            color: white;
            font-weight: bold;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

        .closebtn:hover {
            color: black;
        }

        .alert-danger {
            background-color: #f44336;

        }

        .alert-success {
            background-color: #27ae60;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border-color);
        }

        .page-title {
            font-size: 2rem;
            color: var(--text-color);
        }

        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: var(--primary-color);
            color: white;
            text-decoration: none;
            border-radius: var(--border-radius);
            transition: background-color 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn:hover {
            background-color: var(--secondary-color);
        }

        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
            margin: 0 0.25rem;
        }

        .btn-success {
            background-color: var(--success-color);
        }

        .btn-success:hover {
            background-color: #219a52;
        }

        .btn-danger {
            background-color: var(--danger-color);
        }

        .btn-danger:hover {
            background-color: #c0392b;
        }

        /* Table Styles */
        .table-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th,
        .table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        .table th {
            background-color: var(--accent-color);
            font-weight: 600;
            color: var(--text-color);
        }

        .table tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .table tbody tr:hover {
            background-color: #e9ecef;
        }

        /* Responsive Table */
        .table-responsive {
            overflow-x: auto;
        }

        /* Cards Layout for Mobile */
        .centres-grid {
            display: none;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .centre-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 1.5rem;
            transition: transform 0.3s ease;
        }

        .centre-card:hover {
            transform: translateY(-2px);
        }

        .centre-name {
            font-size: 1.3rem;
            font-weight: bold;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .centre-location {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .centre-stats {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            padding: 0.5rem;
            background-color: var(--accent-color);
            border-radius: var(--border-radius);
        }

        .centre-actions {
            display: flex;
            gap: 0.5rem;
        }

        /* Mobile Navigation */
        .nav-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        @* @media (max-width: 768px) {
            .nav-toggle {
                display: block;
            }

            .nav-links {
                display: none;
                position: absolute;
                top: 100%;
                left: 0;
                width: 100%;
                background-color: var(--primary-color);
                flex-direction: column;
                padding: 1rem;
                gap: 0;
            }

            .nav-links.active {
                display: flex;
            }

            .nav-links a {
                padding: 1rem;
                border-bottom: 1px solid var(--secondary-color);
            }

            .page-header {
                flex-direction: column;
                gap: 1rem;
                align-items: stretch;
            }

            .table-container {
                display: none;
            }

            .centres-grid {
                display: grid;
            } *@
        }
    </style>
</head>

<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-brand">Blood Bank Dashboard</div>
            <button class="nav-toggle" onclick="toggleNav()">â˜°</button>
            <ul class="nav-links" id="navLinks">
                <li><a href="../Home">Home</a></li>
                <li><a href="../Center/" class="active">Centres</a></li>
                <li><a href="../Donor/">Donors</a></li>
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="container">
            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">Blood Centres</h1>
                <a href="Center/Create" class="btn btn-primary">+ Add Centre</a>
            </div>
            <div id="messageBox"></div>
            <!-- Desktop Table View -->
            <div class="table-container">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Center Name</th>
                                <th>Location</th>
                                <th>Total Donors</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var centre in Model)
                            {
                                <tr>
                                    <td>@centre.Name</td>
                                    <td>@centre.Location</td>
                                    <td>@(centre.Donors?.Count ?? 0)</td>
                                    <td>
                                        <a href="../Center/Edit?id=@centre.Id" class="btn btn-sm btn-success">Edit</a>
                                        <button class="btn btn-sm btn-danger"
                                            onclick="confirmDelete('@centre.Name',@centre.Id);">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </main>

    <script>
        async function confirmDelete(centreName, centerId) {
            if (confirm(`Are you sure you want to delete "${centreName}"?`)) {
                const res = await fetch(`/api/CenterApi/${centerId}`, {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" }
                });

                const messageBox = document.getElementById("messageBox");

                if (res.ok) {
                    const result = await res.json();
                    messageBox.innerHTML = `<div class="alert alert-success"> <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> ${result.message}</div>`;
                    setInterval(function () {
                        location.reload();
                    }, 5000);
                } else {
                    const errorText = await res.text();
                    messageBox.innerHTML = `<div class="alert alert-danger"> <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> ${errorText}</div>`;
                }
            }
        }

    </script>
</body>

</html>
