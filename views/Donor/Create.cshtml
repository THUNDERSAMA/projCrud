@model List<projCrud.Models.Center>
@{
    ViewData["Title"] = "create donors";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blood Bank Dashboard - Add Donor</title>
    <style>
        :root {
            --primary-color: #e74c3c;
            --secondary-color: #c0392b;
            --accent-color: #f8f9fa;
            --text-color: #2c3e50;
            --border-color: #dee2e6;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            --border-radius: 8px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: #f8f9fa;
        }

        /* Navigation */
        .navbar {
            background-color: var(--primary-color);
            color: white;
            padding: 1rem 0;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            box-shadow: var(--shadow);
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-brand {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            transition: background-color 0.3s ease;
        }

        .nav-links a:hover,
        .nav-links a.active {
            background-color: var(--secondary-color);
        }

        .alert {
            padding: 20px;
            color: white;
            border-radius: 5px;
        }

        .closebtn {
            margin-left: 15px;
            color: white;
            font-weight: bold;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

        .closebtn:hover {
            color: black;
        }

        .alert-danger {
            background-color: #f44336;

        }

        .alert-success {
            background-color: #27ae60;
        }

        /* Main Content */
        .main-content {
            margin-top: 80px;
            padding: 2rem 0;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .page-header {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border-color);
        }

        .page-title {
            font-size: 2rem;
            color: var(--text-color);
        }

        /* Form Styles */
        .form-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 2rem;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-color);
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .form-control:invalid {
            border-color: var(--danger-color);
        }

        .form-control:valid {
            border-color: var(--success-color);
        }

        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: var(--primary-color);
            color: white;
            text-decoration: none;
            border-radius: var(--border-radius);
            transition: background-color 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            margin-right: 1rem;
        }

        .btn:hover {
            background-color: var(--secondary-color);
        }

        .btn-secondary {
            background-color: #6c757d;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        /* Mobile Navigation */
        .nav-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        @* @media (max-width: 768px) {
            .nav-toggle {
                display: block;
            }

            .nav-links {
                display: none;
                position: absolute;
                top: 100%;
                left: 0;
                width: 100%;
                background-color: var(--primary-color);
                flex-direction: column;
                padding: 1rem;
                gap: 0;
            }

            .nav-links.active {
                display: flex;
            }

            .nav-links a {
                padding: 1rem;
                border-bottom: 1px solid var(--secondary-color);
            }

            .form-row {
                grid-template-columns: 1fr;
            }

            .form-actions {
                flex-direction: column;
            }

            .btn {
                margin-right: 0;
            } *@
        }
    </style>
</head>

<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-brand">Blood Bank Dashboard</div>
            <button class="nav-toggle" onclick="toggleNav()">â˜°</button>
            <ul class="nav-links" id="navLinks">
                <li><a href="../Home">Home</a></li>
                <li><a href="../Center/" class="active">Centres</a></li>
                <li><a href="../Donor/">Donors</a></li>
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="container">
            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">Add New Donor</h1>
            </div>

            <!-- Form -->
            <div class="form-container">
                <div id="messageBox" style="margin-bottom: 10px;"></div>
                <form id="centerForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="donorName" class="form-label">Donor Name *</label>
                            <input type="text" id="name" name="donorName" class="form-control" required
                                placeholder="Enter donor name">
                        </div>

                        <div class="form-group">
                            <label for="donorAge" class="form-label">Age *</label>
                            <input type="number" id="age" name="donorAge" class="form-control" required min="18"
                                max="65" placeholder="Enter age">
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="bloodGroup" class="form-label">Blood Group *</label>
                            <select id="bloodGroup" name="bloodGroup" class="form-control" required>
                                <option value="">Select Blood Group</option>
                                <option value="A+">A+</option>
                                <option value="A-">A-</option>
                                <option value="B+">B+</option>
                                <option value="B-">B-</option>
                                <option value="AB+">AB+</option>
                                <option value="AB-">AB-</option>
                                <option value="O+">O+</option>
                                <option value="O-">O-</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="donationDate" class="form-label">Donation Date *</label>
                            <input type="date" id="date" name="donationDate" class="form-control" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="center" class="form-label">Centre *</label>
                        <select id="center" name="center" class="form-control" required>
                            <option value="">Select Centre</option>
                            @foreach (var center in Model)
                            {
                                <option value="@center.Id">@center.Name</option>

                            }
                        </select>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn">Add Donor</button>

                    </div>
                </form>
            </div>
        </div>
    </main>

    <script>
        document.getElementById("centerForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const donorData = {
                Name: document.getElementById("name").value,
                Age: document.getElementById("age").value,
                BloodGroup: document.getElementById("bloodGroup").value,
                DonationDate: document.getElementById("date").value,
                CenterId: document.getElementById("center").value

            };
            console.log(donorData);
            try {
                const response = await fetch("/api/DonorApi", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(donorData)
                });

                const result = await response.json();

                if (response.ok) {
                    document.getElementById("messageBox").innerHTML =
                        `<div class="alert alert-success"><span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>${result.message}</div>`;
                    document.getElementById("centerForm").reset();
                } else {
                    let errors = "Unknown error";
                    if (result.errors) {
                        errors = Object.values(result.errors).flat().join("<br>");
                    } else if (result.title) {
                        errors = result.title;
                    }
                    document.getElementById("messageBox").innerHTML =
                        `<div class="alert alert-danger"><span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>${errors}</div>`;
                }
            } catch (error) {
                console.error("Error:", error);
                document.getElementById("messageBox").innerHTML =
                    `<div class="alert alert-danger"><span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>Something went wrong!</div>`;
            }
        });
    </script>
</body>

</html>
